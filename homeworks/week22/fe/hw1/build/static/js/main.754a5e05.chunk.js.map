{"version":3,"sources":["nav/Nav.js","nav/index.js","post_list/PostList.js","post_list/index.js","post/index.js","post/Post.js","about/index.js","about/About.js","write/index.js","write/Write.js","home/Home.js","home/index.js","App.js","serviceWorker.js","index.js"],"names":["Tab","label","to","exact","path","children","match","className","Nav","isMove","PostList","props","handlePostListData","axios","get","then","resp","setState","postListData","data","reverse","state","this","history","map","card","key","id","onClick","push","title","body","author","Component","withRouter","Post","handlePostData","url","params","listId","postData","source","About","Write","handlePostArticle","post","catch","error","alert","handleInput","e","inputType","target","value","onChange","type","Home","slice","length","App","scroll","scrollY","window","addEventListener","removeEventListener","basename","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.754a5e05.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Tab({ label, to, exact }) {\r\n    return (\r\n      <Route\r\n        path={to}\r\n        exact={exact}\r\n        children={({ match }) => (\r\n          <li className={match ? \"active\" : \"\"}>\r\n            <Link className=\"link\" to={to}>{label}</Link>\r\n          </li>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n\r\nconst Nav = ({isMove}) => {\r\n    return (\r\n        <nav className={isMove ? \"window-is-Moving\" : \"window-UnMoving\"}>\r\n            <ul>\r\n                <li>\r\n                    Blue Orange\r\n                </li>\r\n                <Tab exact={true} to=\"/\" label=\"Home\" />\r\n                <Tab to=\"/about\" label=\"About\" />\r\n                <Tab to=\"/list\" label=\"List\" />\r\n                <Tab to=\"/write\" label=\"Write\" />\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Nav\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Nav from './Nav';\r\n\r\nexport default Nav;","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass PostList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            postListData: [], \r\n        }\r\n    }\r\n \r\n    handlePostListData = () => {\r\n        const url = 'https://qootest.com/posts'\r\n        axios.get(url)\r\n            .then(resp => {\r\n                this.setState({\r\n                    postListData: resp.data.reverse(),\r\n                })\r\n            })\r\n    }\r\n \r\n    componentDidMount() {\r\n        this.handlePostListData()\r\n    }\r\n    \r\n    render(){\r\n        const {postListData} = this.state\r\n        const {history} = this.props\r\n        return (\r\n            <div  className=\"board\">\r\n            <div className=\"page-title\">\r\n                Articles\r\n            </div>\r\n            {!postListData[0] ? \r\n            <div className=\"loading\">\r\n                Loading... \r\n            </div> : \r\n            postListData.map(card => (\r\n                <div key={card.id} \r\n                    className=\"post\" \r\n                    onClick={() => { \r\n                        history.push('/list/id=' + card.id)\r\n                    }}>\r\n                    <div className=\"post-title\">\r\n                        {card.title}\r\n                    </div>\r\n                    <div className=\"post-text\">\r\n                        {card.body}\r\n                    </div>\r\n                    <div className=\"post-editor\">\r\n                        Author: {card.author ? card.author : \"Noname\"}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\nexport default withRouter(PostList) ","import PostList from './PostList';\r\n\r\nexport default PostList;","import Post from './Post';\r\n\r\nexport default Post;","import React, {Component} from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport axios from 'axios';\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            postData: [], \r\n        }\r\n    }\r\n \r\n    handlePostData = () => {\r\n        const listId = this.props.match.params.listId\r\n        const url = 'https://qootest.com/posts/' + listId\r\n        axios.get(url)\r\n            .then(resp => {\r\n                this.setState({\r\n                    postData: resp.data\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handlePostData()\r\n    }\r\n    \r\n    render(){\r\n        const { postData } = this.state\r\n        return (\r\n            <div  className=\"board\">\r\n                <div key={postData.id} \r\n                    className=\"single-post\" >        \r\n                    <div className=\"single-post-title\">\r\n                        {postData.title}\r\n                    </div>\r\n                    <ReactMarkdown \r\n                        className=\"single-post-text\" \r\n                        source={postData.body ? postData.body : \"Loading...\"} \r\n                    />\r\n                    <div className=\"single-post-editor\">\r\n                        {\"Author: \" + (postData.author ? postData.author : \"Noname\")}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\nexport default Post","import About from './About';\r\n\r\nexport default About;","import React, {Component} from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst About = () => {\r\n    return ( \r\n         <div  className=\"board\">\r\n            <div className=\"page-title\">\r\n                About Blog\r\n            </div>\r\n             <div className=\"single-post\">\r\n                 <ReactMarkdown className=\"single-post-text\" source=\"\r\n                    ## Markdown 語法\r\n                      目前 Markdown 語法還有一些小 Bug 未解，比如說有些字元 (如<ul>) 不能被 render\r\n                    ## <Switch>\r\n                      這是目前使用 React-router 還沒碰觸的一塊，有時間需要加緊研究\r\n                    ## Blog 待改進的地方\r\n                      比如說按下發文按鈕之後可以有動畫跳回 /list，這應該也是可以實作的部分\r\n                 \" />\r\n                 <div className=\"single-post-editor\">\r\n                        Author: Clay Gao\r\n                 </div>\r\n             </div>\r\n         </div>\r\n     )\r\n  }\r\n\r\n\r\nexport default About","import Write from './Write';\r\n\r\nexport default Write;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Write extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title:'',\r\n            author:'',\r\n            body:''\r\n        }\r\n    }\r\n    \r\n    handlePostArticle = () => {\r\n        const url = 'https://qootest.com/posts'\r\n        const data = this.state \r\n        if (!data.title || !data.author || !data.body) {\r\n            alert('Write Something :D') \r\n            return\r\n        }\r\n        axios.post(url, data)\r\n        .then(\r\n            this.setState({\r\n                title:'',\r\n                author:'',\r\n                body:''\r\n            })\r\n        ).catch(error =>{\r\n            alert('Failed to post, connect admin please :)')\r\n        })\r\n    }\r\n    \r\n    \r\n    handleInput = (e) => {\r\n        const inputType = e.target.className\r\n            if(inputType === \"write-article-title\") {\r\n                this.setState({title: e.target.value,})\r\n            } else if (inputType === \"write-article-editor\") {\r\n                this.setState({author: e.target.value})\r\n            } else {\r\n                this.setState({body: e.target.value})\r\n            }\r\n    }\r\n    \r\n    render(){\r\n        const {title, author, body} = this.state\r\n        return (\r\n            <div  className=\"board\">\r\n                <div className=\"page-title\">\r\n                    Write Something :D\r\n                </div>\r\n                <form className=\"write-article\"  onChange={this.handleInput} >\r\n                    Title: <input type=\"text\" className=\"write-article-title\" value={title} />\r\n                    Your name: <input type=\"text\" className=\"write-article-editor\" value={author} />\r\n                    Content:　<textarea className=\"write-article-text\" value={body}></textarea>\r\n                    <input type=\"button\" onClick={this.handlePostArticle} className=\"write-article-button\" value=\"Send\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\nexport default Write","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            postListData: [], \r\n        }\r\n    }\r\n \r\n    handlePostListData = () => {\r\n        const url = 'https://qootest.com/posts'\r\n        axios.get(url)\r\n            .then(resp => {\r\n                this.setState({\r\n                    postListData: resp.data.slice(resp.data.length - 9, resp.data.length).reverse()\r\n                })\r\n            })\r\n    }\r\n \r\n    componentDidMount() {\r\n        this.handlePostListData()\r\n    }\r\n    \r\n    render(){\r\n        const {postListData} = this.state\r\n        const {history} = this.props\r\n        return (\r\n            <div>\r\n                <div  className=\"board\">\r\n                    <div className=\"page-title\">\r\n                        About me\r\n                    </div>\r\n                    <div className=\"single-post\" >        \r\n                        <div className=\"single-post-text\">\r\n                            Hi, I am Clay \r\n                            <br />\r\n                            I am Learing Web Frontend Develope and try to bulid my Blog with React and React-router\r\n                            <br />\r\n                            Maybe it looks ugly Orz.... but everything will be alright, doesn't it ?\r\n                            <br />\r\n                            By the way, the blog now you see won't be the latest version \r\n                            <br />\r\n                            I will update week by week\r\n                            <br />\r\n                            So, give me some time\r\n                            <br />\r\n                            See you :D\r\n                            <br />\r\n                            Xin Yi Liu go to eat the SHIT :D\r\n                        </div>\r\n                        <div className=\"single-post-editor\">\r\n                            Author: ClayGao\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"page-title\">\r\n                        The Latest Articles\r\n                    </div>\r\n                    {postListData.map(card => (\r\n                        <div key={card.id} \r\n                            className=\"post\" \r\n                            onClick={() => { \r\n                                history.push('/list/id=' + card.id)\r\n                            }}>\r\n                            <div className=\"post-title\">\r\n                                {card.title}\r\n                            </div>\r\n                            <div className=\"post-text\" >\r\n                            {card.body}\r\n                            </div>\r\n                            <div className=\"post-editor\">\r\n                                Author: {card.author ? card.author : \"Noname\"}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\nexport default withRouter(Home) ","import Home from './Home';\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport './scss/App.scss';\r\nimport Nav from './nav'\r\nimport PostList from './post_list'\r\nimport Post from './post'\r\nimport About from './about'\r\nimport Write from './write'\r\nimport Home from './home'\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n          scrollY : window.scrollY\r\n      }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.scroll);\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    window.removeEventListener(\"scroll\", this.scroll);\r\n  }\r\n  \r\n  scroll = () => {\r\n      this.setState({\r\n        scrollY : window.scrollY\r\n      })\r\n  }\r\n\r\n  render() {\r\n      const {scrollY} = this.state\r\n      return (\r\n        <Router basename=\"/week22/my-app/build\">\r\n          <div className=\"App\">\r\n              <Nav isMove={scrollY}/>\r\n              <div className=\"wrapper\"> \r\n              <Switch> \r\n                  <Route path=\"/\" exact component={Home} />\r\n                  <Route path=\"/about\" component={About} />\r\n                  <Route path=\"/list\" exact component={PostList} />\r\n                  <Route path=\"/list/id=:listId\" component={Post} />\r\n                  <Route path=\"/write\" exact component={Write} /> \r\n              </Switch>\r\n              </div>\r\n          </div>\r\n        </Router>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}